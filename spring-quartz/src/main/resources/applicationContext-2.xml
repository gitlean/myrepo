<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd 
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- 配置注解扫描 -->
	<context:component-scan base-package="cn.isoft" />


	<!-- 第二步：spring配置文件中配置作业类JobDetailBean -->

	<!-- spring配置文件中配置作业类JobDetailBean -->
	<!-- 有两个属性，jobClass属性即我们在java代码中定义的任务类，jobDataAsMap属性即该任务类中需要注入的属性值。 -->
	<bean name="job1"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="com.isoft.demo1.jobs.Job1" />
		<property name="jobDataAsMap">
			<map>
				<entry key="timeout" value="0" />
			</map>
		</property>
	</bean>


	<!-- 第三步：配置作业调度的触发方式（触发器） -->

	<!-- 第一种SimpleTriggerBean，只支持按照一定频度调用任务，如每隔30分钟运行一次。 -->
	<bean id="simpleTrigger"
		class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="job1" />
		<property name="startDelay" value="0" /><!-- 调度工厂实例化后，经过0秒开始执行调度 -->
		<property name="repeatInterval" value="2000" /><!-- 每2秒调度一次 -->
	</bean>

	<!-- 第二种CronTriggerBean，支持到指定时间运行一次，如每天XX:XX运行一次等。 -->
	<bean id="cronTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="job1" />
		<property name="cronExpression" value="0 */1 * * * ?" />  <!--每1分钟运行一次 -->
	</bean>


	<!-- 第四步：配置调度工厂 -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<!--<ref bean="simpleTrigger" />-->
				<ref bean="cronTrigger" /> 
			</list>
		</property>
	</bean>


	<!-- 第五步：启动你的应用即可，即将工程部署至tomcat或其他容器。 -->
</beans>