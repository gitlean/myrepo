<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"


	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd 
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


	<import resource="JPAEntityManagerFactory.xml" />

	<!-- (Annotation方式配置services)enable component scanning (beware that this 
		does not enable mapper scanning!) -->
	<context:component-scan base-package="com.xxx.service" />
	<context:component-scan base-package="cn.outofmemory" />
	<context:component-scan base-package="com.xxx.system" />



	<!-- 电影数据访问层 对象 -->
	<bean id="filmDao" class="com.xxx.dao.imp.FilmDaoImp"></bean>

	<!-- 电影业务逻辑对象 -->
	<bean id="filmService" class="com.xxx.service.impl.FilmServiceImpl"></bean>


	<!-- 创建FilmAction -->
	<bean id="filmAction" class="com.xxx.web.struts.action.FilmAction"
		scope="prototype" />

	<!-- ***************************************************************************** -->

	<bean id="configProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<!-- <value>classpath*:META-INF/spring/*.properties</value> -->
				<value>classpath*:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="properties" ref="configProperties"></property>
	</bean>
	<!-- ***************************************************************************** -->


	<!-- 数据源配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<!-- "close"的作用是当数据库连接不使用的时候,就把该连接重新放到数据池中,方便下次使用调用 -->

		<property name="driverClassName" value="${database.driverClassName}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="1" />
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="10" />
		<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="2" />
		<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		<property name="minIdle" value="1" />

	</bean>

	<!-- DataSourceTransactionManager -->
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>



	<!-- enable autowire -->
	<context:annotation-config />
	
	<!-- 激活@AspectJ支持 -->
	<aop:aspectj-autoproxy />
	
	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven />

</beans>